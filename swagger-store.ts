export const swaggerFiles = [
    { "swagger": "2.0","id": "repairs","info": { "version": "v1", "title": "Hackney Repairs API - Production", "description": "This is the Hackney Repairs API which allows client applications to securely access publicly available information on repairs to Hackney properties, and to raise new repair requests." }, "host": "api.hackney.gov.uk/unboxedhackneyrepairs/", "paths": { "/v1/work_orders/{workOrderReference}/available_appointments": { "get": { "tags": ["Appointments"], "summary": "Returns available appointments for a Universal Housing work order", "operationId": "V1Work_ordersByWorkOrderReferenceAvailable_appointmentsGet", "consumes": [], "produces": [], "parameters": [{ "name": "workOrderReference", "in": "path", "required": true, "type": "string" }], "responses": { "200": { "description": "Returns the list of available appointments" }, "400": { "description": "If no valid work order reference is provided" }, "404": { "description": "Not Found" }, "500": { "description": "If any errors are encountered" } } } }, "/v1/work_orders/{workOrderReference}/appointments": { "get": { "tags": ["Appointments"], "summary": "Returns all appointments for a work order", "operationId": "V1Work_ordersByWorkOrderReferenceAppointmentsGet", "consumes": [], "produces": [], "parameters": [{ "name": "workOrderReference", "in": "path", "description": "UH work order reference", "required": true, "type": "string" }], "responses": { "200": { "description": "Returns a list of appointments for a work order reference" }, "404": { "description": "If there are no appointments found for the work orders reference" }, "500": { "description": "If any errors are encountered" } } }, "post": { "tags": ["Appointments"], "summary": "Creates an appointment", "operationId": "V1Work_ordersByWorkOrderReferenceAppointmentsPost", "consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"], "produces": [], "parameters": [{ "name": "workOrderReference", "in": "path", "description": "The reference number of the work order for the appointment", "required": true, "type": "string" }, { "name": "request", "in": "body", "required": false, "schema": { "$ref": "#/definitions/ScheduleAppointmentRequest" } }], "responses": { "200": { "description": "A successfully created repair request" } } } }, "/v1/work_orders/{workOrderReference}/appointments/latest": { "get": { "tags": ["Appointments"], "summary": "Returns the latest apointment for a work order", "operationId": "V1Work_ordersByWorkOrderReferenceAppointmentsLatestGet", "consumes": [], "produces": [], "parameters": [{ "name": "workOrderReference", "in": "path", "description": "UH work order reference", "required": true, "type": "string" }], "responses": { "200": { "description": "Returns an appointment for a work order reference" }, "404": { "description": "If there is no appointment found for the work order reference" }, "500": { "description": "If any errors are encountered" } } } }, "/v1/notes/feed": { "get": { "tags": ["Notes"], "summary": "Returns a list of notes matching the noteTarget and with a note id greater than startId", "operationId": "V1NotesFeedGet", "consumes": [], "produces": [], "parameters": [{ "name": "startId", "in": "query", "description": "A note id, results will have a grater id than this parameter", "required": false, "type": "integer", "format": "int32" }, { "name": "noteTarget", "in": "query", "description": "The kind of note defined in Universal Housing (required)", "required": false, "type": "string" }, { "name": "resultSize", "in": "query", "description": "The maximum number of notes returned. Default value is 50", "required": false, "type": "integer", "format": "int32" }], "responses": { "200": { "description": "Returns a list of notes" }, "400": { "description": "If a parameter is invalid" }, "404": { "description": "If the noteTarget parameter does not exist un Universal Housing" }, "500": { "description": "If any errors are encountered" } } } }, "/v1/properties/{propertyReference}/hierarchy": { "get": { "tags": ["Properties"], "summary": "Returns the hierarchy details of a property", "operationId": "V1PropertiesByPropertyReferenceHierarchyGet", "consumes": [], "produces": [], "parameters": [{ "name": "propertyReference", "in": "path", "description": "The reference number of the requested property", "required": true, "type": "string" }], "responses": { "200": { "description": "Returns a list of property details" }, "404": { "description": "If the property is not found" }, "500": { "description": "If any errors are encountered" } } } }, "/v1/properties": { "get": { "tags": ["Properties"], "summary": "Gets a property or properties for a particular postcode", "operationId": "V1PropertiesGet", "consumes": [], "produces": [], "parameters": [{ "name": "postcode", "in": "query", "description": "The post code of the propterty being requested", "required": false, "type": "string" }, { "name": "max_level", "in": "query", "description": "The highest hierarchy level or the properties requested. Higest is 0 (Owner, Hackney Council)", "required": false, "type": "integer", "format": "int32" }, { "name": "min_level", "in": "query", "description": "The lowest hierarchy level of the properties requested. Lowest is 8 (Non-Dwell)", "required": false, "type": "integer", "format": "int32" }], "responses": { "200": { "description": "Returns the list of properties" }, "400": { "description": "If a post code is not provided" }, "500": { "description": "If any errors are encountered" } } } }, "/v1/properties/{reference}": { "get": { "tags": ["Properties"], "summary": "Gets the details of a property by a given reference number", "operationId": "V1PropertiesByReferenceGet", "consumes": [], "produces": [], "parameters": [{ "name": "reference", "in": "path", "description": "The reference number of the requested property", "required": true, "type": "string" }], "responses": { "200": { "description": "Returns the property" }, "404": { "description": "If the property is not found" }, "500": { "description": "If any errors are encountered" } } } }, "/v1/properties/{reference}/block": { "get": { "tags": ["Properties"], "summary": "Gets the details of a block of a property by a given property reference number", "operationId": "V1PropertiesByReferenceBlockGet", "consumes": [], "produces": [], "parameters": [{ "name": "reference", "in": "path", "description": "The reference number of the property", "required": true, "type": "string" }], "responses": { "200": { "description": "Returns the block of the property" }, "404": { "description": "If the property is not found" }, "500": { "description": "If any errors are encountered" } } } }, "/v1/properties/{propertyReference}/block/work_orders": { "get": { "tags": ["Properties"], "summary": "Gets work orders raised against a block and against any property int he block", "operationId": "V1PropertiesByPropertyReferenceBlockWork_ordersGet", "consumes": [], "produces": [], "parameters": [{ "name": "propertyReference", "in": "path", "description": "Property reference, the level of the property cannot be higher than block.", "required": true, "type": "string" }, { "name": "trade", "in": "query", "description": "Trade of the work order to filter the results (Required).", "required": false, "type": "string" }, { "name": "since", "in": "query", "description": "A string with the format dd-MM-yyyy (Optional).", "required": false, "type": "string" }, { "name": "until", "in": "query", "description": "A string with the format dd-MM-yyyy (Optional).", "required": false, "type": "string" }], "responses": { "200": { "description": "Returns work orders raised against a block and all properties in it" }, "400": { "description": "If trade parameter is missing or since or until do not have the right datetime format" }, "404": { "description": "If the property was not found" }, "500": { "description": "If any errors are encountered" } } } }, "/v1/properties/{reference}/estate": { "get": { "tags": ["Properties"], "summary": "Gets the details of an estate of a property by a given property reference number", "operationId": "V1PropertiesByReferenceEstateGet", "consumes": [], "produces": [], "parameters": [{ "name": "reference", "in": "path", "description": "The reference number of the property", "required": true, "type": "string" }], "responses": { "200": { "description": "Returns the estate of the property" }, "404": { "description": "If the property is not found" }, "500": { "description": "If any errors are encountered" } } } }, "/v1/repairs": { "get": { "tags": ["Repairs"], "summary": "Returns all Repair Requests for a property, for the work orders and contact details call /v1/repairs/{repairRequestReference}", "operationId": "V1RepairsGet", "consumes": [], "produces": [], "parameters": [{ "name": "propertyReference", "in": "query", "description": "Universal Housing property reference", "required": false, "type": "string" }], "responses": { "200": { "description": "Returns a list of Repair Requests" }, "404": { "description": "If no Repair Request was found for the property" }, "500": { "description": "If any errors are encountered" } } }, "post": { "tags": ["Repairs"], "summary": "Creates a repair request", "operationId": "V1RepairsPost", "consumes": ["application/json-patch+json", "application/json", "text/json", "application/*+json"], "produces": [], "parameters": [{ "name": "request", "in": "body", "required": false, "schema": { "$ref": "#/definitions/RepairRequest" } }], "responses": { "200": { "description": "A successfully created repair request" } } } }, "/v1/repairs/{repairRequestReference}": { "get": { "tags": ["Repairs"], "summary": "Retrieves a repair request", "operationId": "V1RepairsByRepairRequestReferenceGet", "consumes": [], "produces": [], "parameters": [{ "name": "repairRequestReference", "in": "path", "description": "The reference number of the repair request", "required": true, "type": "string" }], "responses": { "200": { "description": "Returns a repair request" }, "404": { "description": "If the request is not found" }, "500": { "description": "If any errors are encountered" } } } }, "/v1/work_orders/by_references": { "get": { "tags": ["WorkOrders"], "summary": "Returns all work orders for given work order references", "operationId": "V1Work_ordersBy_referencesGet", "consumes": [], "produces": [], "parameters": [{ "name": "reference", "in": "query", "description": "Work order reference", "required": false, "type": "array", "items": { "type": "string" }, "collectionFormat": "multi" }, { "name": "include", "in": "query", "description": "Allows extending the content of the Work Order response. Currently only accepts the value \"mobilereports\"", "required": false, "type": "string" }], "responses": { "200": { "description": "Returns a list of work orders for the work order references" }, "400": { "description": "If no work order references are given" }, "404": { "description": "If one or more work orders are missing based on the references given" }, "500": { "description": "If any errors are encountered" } } } }, "/v1/work_orders/{workOrderReference}": { "get": { "tags": ["WorkOrders"], "summary": "Retrieves a work order", "operationId": "V1Work_ordersByWorkOrderReferenceGet", "consumes": [], "produces": [], "parameters": [{ "name": "workOrderReference", "in": "path", "description": "Work order reference", "required": true, "type": "string" }, { "name": "include", "in": "query", "description": "Allows extending the content of the Work Order response. Currently only accepts the value \"mobilereports\"", "required": false, "type": "string" }], "responses": { "200": { "description": "Returns the work order for the work order reference" }, "400": { "description": "Bad Request" }, "404": { "description": "If there is no work order for the given reference" }, "500": { "description": "If any errors are encountered" } } } }, "/v1/work_orders": { "get": { "tags": ["WorkOrders"], "summary": "Returns all work orders for a property", "operationId": "V1Work_ordersGet", "consumes": [], "produces": [], "parameters": [{ "name": "propertyReference", "in": "query", "description": "UH Property reference", "required": false, "type": "array", "items": { "type": "string" }, "collectionFormat": "multi" }, { "name": "since", "in": "query", "description": "A string with the format dd-MM-yyyy (Optional).", "required": false, "type": "string" }, { "name": "until", "in": "query", "description": "A string with the format dd-MM-yyyy (Optional).", "required": false, "type": "string" }], "responses": { "200": { "description": "Returns a list of work orders for the property reference" }, "400": { "description": "If no parameter or a parameter different than propertyReference is passed" }, "500": { "description": "If any errors are encountered" }, "404": { "description": "If there are no work orders for the given property reference" } } } }, "/v1/work_orders/{workOrderReference}/notes": { "get": { "tags": ["WorkOrders"], "summary": "Returns all notes for a work order", "operationId": "V1Work_ordersByWorkOrderReferenceNotesGet", "consumes": [], "produces": [], "parameters": [{ "name": "workOrderReference", "in": "path", "description": "Work order reference", "required": true, "type": "string" }], "responses": { "200": { "description": "Returns a list of notes for a work order reference" }, "404": { "description": "If there is no notes found for the work order" }, "500": { "description": "If any errors are encountered" } } } }, "/v1/work_orders/feed": { "get": { "tags": ["WorkOrders"], "summary": "Returns a list of work orders with a work order reference greater than the parameter startId", "operationId": "V1Work_ordersFeedGet", "consumes": [], "produces": [], "parameters": [{ "name": "startId", "in": "query", "description": "A work order reference, results will have a grater id than this parameter", "required": false, "type": "string" }, { "name": "resultSize", "in": "query", "description": "The maximum number of work orders returned. Default value is 50", "required": false, "type": "integer", "format": "int32" }], "responses": { "200": { "description": "Returns a list of work orders" }, "400": { "description": "If a parameter is invalid" }, "500": { "description": "If any errors are encountered" } } } } }, "definitions": { "ScheduleAppointmentRequest": { "type": "object", "properties": { "beginDate": { "type": "string" }, "endDate": { "type": "string" } } }, "RepairRequest": { "type": "object", "properties": { "contact": { "$ref": "#/definitions/RepairRequestContact" }, "workOrders": { "type": "array", "items": { "$ref": "#/definitions/WorkOrder" } }, "repairRequestReference": { "type": "string" }, "priority": { "type": "string" }, "propertyReference": { "type": "string" }, "problemDescription": { "type": "string" } } }, "RepairRequestContact": { "type": "object", "properties": { "name": { "type": "string" }, "telephoneNumber": { "type": "string" }, "emailAddress": { "type": "string" }, "callbackTime": { "type": "string" } } }, "WorkOrder": { "type": "object", "properties": { "workOrderReference": { "type": "string" }, "sorCode": { "type": "string" }, "supplierRef": { "type": "string" } } } } },
    {"swagger":"2.0", "id": "tenancy_management_process","info":{"version":"v1","title":"Hackney.TMProcess.API"},"paths":{"/api/DataPersistence/GetPageSchemaLayout":{"get":{"tags":["DataPersistence"],"operationId":"ApiDataPersistenceGetPageSchemaLayoutGet","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"taskPageId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"outsystemsSessionId","in":"query","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success","schema":{"type":"string"}}}}},"/api/DataPersistence/GetPageSchemaLayoutData":{"get":{"tags":["DataPersistence"],"operationId":"ApiDataPersistenceGetPageSchemaLayoutDataGet","consumes":[],"produces":[],"parameters":[{"name":"taskPageId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"tenancyManagementProcessId","in":"query","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success"}}}},"/api/email/{sessionId}/{id}":{"get":{"tags":["Email"],"operationId":"ApiEmailBySessionIdByIdGet","consumes":[],"produces":[],"parameters":[{"name":"sessionId","in":"path","required":true,"type":"string"},{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success"}}}},"/api/email/{sessionId}/{id}/view":{"get":{"tags":["Email"],"operationId":"ApiEmailBySessionIdByIdViewGet","consumes":[],"produces":[],"parameters":[{"name":"sessionId","in":"path","required":true,"type":"string"},{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success"}}}},"/api/email/{sessionId}":{"get":{"tags":["Email"],"operationId":"ApiEmailBySessionIdGet","consumes":[],"produces":[],"parameters":[{"name":"sessionId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/api/email":{"post":{"tags":["Email"],"operationId":"ApiEmailPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"model","in":"body","required":false,"schema":{"$ref":"#/definitions/EmailGenerationRequestModel"}}],"responses":{"200":{"description":"Success"}}}},"/api/Integration/AddOutsystemSession":{"post":{"tags":["Integration"],"operationId":"ApiIntegrationAddOutsystemSessionPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"outSystemSessionData","in":"body","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success"}}}},"/api/jpeg/{sessionId}/{id}":{"get":{"tags":["Jpeg"],"operationId":"ApiJpegBySessionIdByIdGet","consumes":[],"produces":[],"parameters":[{"name":"sessionId","in":"path","required":true,"type":"string"},{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success"}}}},"/api/jpeg/{sessionId}/{id}/view":{"get":{"tags":["Jpeg"],"operationId":"ApiJpegBySessionIdByIdViewGet","consumes":[],"produces":[],"parameters":[{"name":"sessionId","in":"path","required":true,"type":"string"},{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success"}}}},"/api/jpeg/{sessionId}":{"get":{"tags":["Jpeg"],"operationId":"ApiJpegBySessionIdGet","consumes":[],"produces":[],"parameters":[{"name":"sessionId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/api/jpeg":{"post":{"tags":["Jpeg"],"operationId":"ApiJpegPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"model","in":"body","required":false,"schema":{"$ref":"#/definitions/JpegRequestModel"}}],"responses":{"200":{"description":"Success"}}}},"/api/PageElements/GetPageSchemaLayout":{"get":{"tags":["PageElements"],"operationId":"ApiPageElementsGetPageSchemaLayoutGet","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"taskPageId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"outsystemsSessionId","in":"query","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success","schema":{"type":"string"}}}}},"/api/PageElements/PostPageData":{"post":{"tags":["PageElements"],"operationId":"ApiPageElementsPostPageDataPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"taskPageId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"outSystemSessionId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"tmProcessId","in":"query","required":false,"type":"string"},{"name":"processId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"processStateId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"contactId","in":"query","required":false,"type":"string"},{"name":"data","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"200":{"description":"Success","schema":{"format":"int32","type":"integer"}}}}},"/api/PageElements/GetResponseDataByTaskPageId":{"get":{"tags":["PageElements"],"operationId":"ApiPageElementsGetResponseDataByTaskPageIdGet","consumes":[],"produces":[],"parameters":[{"name":"outsystemsSessionId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"contactId","in":"query","required":false,"type":"string"},{"name":"taskPageId","in":"query","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success"}}}},"/api/PageElements/GetStatusResponseDataByTaskPageId":{"get":{"tags":["PageElements"],"operationId":"ApiPageElementsGetStatusResponseDataByTaskPageIdGet","consumes":[],"produces":[],"parameters":[{"name":"outsystemsSessionId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"contactId","in":"query","required":false,"type":"string"},{"name":"taskPageId","in":"query","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success"}}}},"/api/PageElements/GetReviewAndSubmitResponse":{"get":{"tags":["PageElements"],"operationId":"ApiPageElementsGetReviewAndSubmitResponseGet","consumes":[],"produces":[],"parameters":[{"name":"outsystemsSessionId","in":"query","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success"}}}},"/api/pdf/{sessionId}/{id}":{"get":{"tags":["Pdf"],"operationId":"ApiPdfBySessionIdByIdGet","consumes":[],"produces":[],"parameters":[{"name":"sessionId","in":"path","required":true,"type":"string"},{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success"}}}},"/api/pdf/{sessionId}/{id}/view":{"get":{"tags":["Pdf"],"operationId":"ApiPdfBySessionIdByIdViewGet","consumes":[],"produces":[],"parameters":[{"name":"sessionId","in":"path","required":true,"type":"string"},{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success"}}}},"/api/pdf/{sessionId}":{"get":{"tags":["Pdf"],"operationId":"ApiPdfBySessionIdGet","consumes":[],"produces":[],"parameters":[{"name":"sessionId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/api/pdf":{"post":{"tags":["Pdf"],"operationId":"ApiPdfPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"model","in":"body","required":false,"schema":{"$ref":"#/definitions/PdfGenerationRequestModel"}}],"responses":{"200":{"description":"Success"}}}},"/api/admin/task/{id}":{"get":{"tags":["Task"],"operationId":"ApiAdminTaskByIdGet","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success"}}}},"/api/admin/task":{"get":{"tags":["Task"],"operationId":"ApiAdminTaskGet","consumes":[],"produces":[],"responses":{"200":{"description":"Success"}}},"post":{"tags":["Task"],"operationId":"ApiAdminTaskPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"model","in":"body","required":false,"schema":{"$ref":"#/definitions/Task"}}],"responses":{"200":{"description":"Success"}}}},"/api/admin/taskpage/load-json":{"post":{"tags":["TaskPage"],"operationId":"ApiAdminTaskpageLoad-jsonPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"taskPageId","in":"query","required":true,"type":"integer","format":"int32"},{"name":"jsonPayload","in":"body","required":false,"schema":{"$ref":"#/definitions/LayoutWrapper"}}],"responses":{"200":{"description":"Success","schema":{"type":"array","items":{"type":"object"}}}}}},"/api/admin/taskpage/validate-json":{"post":{"tags":["TaskPage"],"operationId":"ApiAdminTaskpageValidate-jsonPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"jsonPayload","in":"body","required":false,"schema":{"$ref":"#/definitions/LayoutWrapper"}}],"responses":{"200":{"description":"Success","schema":{"type":"boolean"}}}}},"/api/admin/taskpage/{id}":{"get":{"tags":["TaskPage"],"operationId":"ApiAdminTaskpageByIdGet","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success"}}}},"/api/admin/taskpage":{"get":{"tags":["TaskPage"],"operationId":"ApiAdminTaskpageGet","consumes":[],"produces":[],"responses":{"200":{"description":"Success"}}},"post":{"tags":["TaskPage"],"operationId":"ApiAdminTaskpagePost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"model","in":"body","required":false,"schema":{"$ref":"#/definitions/TaskPage"}}],"responses":{"200":{"description":"Success"}}}}},"definitions":{"EmailGenerationRequestModel":{"required":["subject","sessionId","body","to","from"],"type":"object","properties":{"subject":{"type":"string"},"sessionId":{"format":"int32","type":"integer"},"body":{"type":"string"},"replyTo":{"type":"string"},"to":{"type":"array","items":{"$ref":"#/definitions/EmailAddressRequestModel"}},"cc":{"type":"array","items":{"$ref":"#/definitions/EmailAddressRequestModel"}},"bcc":{"type":"array","items":{"$ref":"#/definitions/EmailAddressRequestModel"}},"from":{"$ref":"#/definitions/EmailAddressRequestModel"}}},"EmailAddressRequestModel":{"required":["address"],"type":"object","properties":{"address":{"type":"string"}}},"JpegRequestModel":{"required":["sessionId","imageData","namePrefix"],"type":"object","properties":{"sessionId":{"format":"int32","type":"integer"},"imageData":{"type":"string"},"namePrefix":{"type":"string"}}},"PdfGenerationRequestModel":{"type":"object","properties":{"html":{"type":"string"},"sessionId":{"format":"int32","type":"integer"},"namePrefix":{"type":"string"}}},"Task":{"type":"object","properties":{"taskId":{"format":"int32","type":"integer"},"stageId":{"format":"int32","type":"integer"},"taskName":{"type":"string"},"isEndTask":{"type":"boolean"}}},"LayoutWrapper":{"type":"object","properties":{"layout":{"type":"array","items":{"$ref":"#/definitions/Layout"}}}},"Layout":{"type":"object","properties":{"type":{"type":"string"},"display":{"type":"string"},"flex-direction":{"type":"string"},"htmlClass":{"type":"string"},"items":{"type":"array","items":{"$ref":"#/definitions/LayoutItem"}},"key":{"type":"string"},"titleMap":{"type":"array","items":{"$ref":"#/definitions/TitleMap"}},"labelHtmlClass":{"type":"string"},"notitle":{"type":"boolean"},"helpvalue":{"type":"string"},"title":{"type":"string"},"expandable":{"type":"boolean"},"expanded":{"type":"boolean"},"fieldHtmlClass":{"type":"string"},"style":{"type":"string"}}},"LayoutItem":{"type":"object","properties":{"type":{"type":"string"},"flex":{"type":"string"},"helpvalue":{"type":"string"},"style":{"type":"string"},"htmlClass":{"type":"string"},"items":{"type":"array","items":{"$ref":"#/definitions/SubItem"}},"key":{"type":"string"},"labelHtmlClass":{"type":"string"},"title":{"type":"string"},"fieldHtmlClass":{"type":"string"}}},"TitleMap":{"type":"object","properties":{"value":{"type":"string"},"name":{"type":"string"}}},"SubItem":{"type":"object","properties":{"key":{"type":"string"},"notitle":{"type":"boolean"},"type":{"type":"string"},"helpvalue":{"type":"string"},"htmlClass":{"type":"string"},"labelHtmlClass":{"type":"string"}}},"TaskPage":{"type":"object","properties":{"taskPageId":{"format":"int32","type":"integer"},"taskId":{"format":"int32","type":"integer"},"taskPageHeading":{"type":"string"},"rightHandMenuId":{"format":"int32","type":"integer"},"schemaLayoutJson":{"type":"string"},"usePrerendered":{"type":"boolean"}}}}},
    {"swagger":"2.0","id": "manage_a_tenancy","info":{"version":"v1","title":"ManageATenancyAPI"},"host":"api.hackney.gov.uk/manageatenancy","paths":{"/v1/Accounts/GetTagReferencenumber":{"get":{"tags":["Accounts"],"summary":"GetTagReferencenumber.","operationId":"V1AccountsGetTagReferencenumberGet","consumes":[],"produces":[],"parameters":[{"name":"hackneyhomesId","in":"query","description":"Payment reference number for Account","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/v1/Accounts/AccountDetailsByPaymentorTagReference":{"get":{"tags":["Accounts"],"summary":"Get account details by tag reference or paris ref","operationId":"V1AccountsAccountDetailsByPaymentorTagReferenceGet","consumes":[],"produces":[],"parameters":[{"name":"referencenumber","in":"query","description":"Payment reference or tag reference number for Account","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/v1/Accounts/AccountDetailsByContactId":{"get":{"tags":["Accounts"],"summary":"Verify Housing Account Details by Payment Reference and postcode.","operationId":"V1AccountsAccountDetailsByContactIdGet","consumes":[],"produces":[],"parameters":[{"name":"contactid","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/v1/AreaPatch/GetAreaPatch":{"get":{"tags":["AreaPatch"],"operationId":"V1AreaPatchGetAreaPatchGet","consumes":[],"produces":[],"parameters":[{"name":"postcode","in":"query","required":false,"type":"string"},{"name":"UPRN","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/v1/AreaPatch/GetAllOfficersPerArea":{"get":{"tags":["AreaPatch"],"operationId":"V1AreaPatchGetAllOfficersPerAreaGet","consumes":[],"produces":[],"parameters":[{"name":"areaId","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/v1/AreaPatch/UpdateOfficerPatchOrAreaManager":{"put":{"tags":["AreaPatch"],"operationId":"V1AreaPatchUpdateOfficerPatchOrAreaManagerPut","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"officerAreaPatch","in":"body","required":false,"schema":{"$ref":"#/definitions/OfficerAreaPatch"}}],"responses":{"200":{"description":"Success"}}}},"/v1/AreaPatch/GetAllUnassignedOfficers":{"get":{"tags":["AreaPatch"],"operationId":"V1AreaPatchGetAllUnassignedOfficersGet","consumes":[],"produces":[],"parameters":[],"responses":{"200":{"description":"Success"}}}},"/v1/CitizenIndexSearch":{"get":{"tags":["CitizenIndexSearch"],"operationId":"V1CitizenIndexSearchGet","consumes":[],"produces":[],"parameters":[{"name":"firstname","in":"query","required":false,"type":"string","default":""},{"name":"surname","in":"query","required":false,"type":"string","default":""},{"name":"addressline12","in":"query","required":false,"type":"string","default":""},{"name":"postcode","in":"query","required":false,"type":"string","default":""},{"name":"IsAdvanceSearch","in":"query","required":false,"type":"boolean","default":false}],"responses":{"200":{"description":"Success"}}}},"/v1/Contacts":{"put":{"tags":["Contacts"],"operationId":"V1ContactsPut","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"contactId","in":"query","required":false,"type":"string"},{"name":"contact","in":"body","required":false,"schema":{"$ref":"#/definitions/Contact"}}],"responses":{"200":{"description":"Success"}}},"post":{"tags":["Contacts"],"summary":"Creates a new CRM contact","operationId":"V1ContactsPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"contact","in":"body","required":false,"schema":{"$ref":"#/definitions/Contact"}}],"responses":{"200":{"description":"Success"}}}},"/v1/Contacts/GetCautionaryAlerts":{"get":{"tags":["Contacts"],"operationId":"V1ContactsGetCautionaryAlertsGet","consumes":[],"produces":[],"parameters":[{"name":"urpn","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/v1/Contacts/RemoveCautionaryAlerts":{"post":{"tags":["Contacts"],"operationId":"V1ContactsRemoveCautionaryAlertsPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"cautionaryAlerts","in":"body","required":false,"schema":{"$ref":"#/definitions/CautionaryAlert"}}],"responses":{"200":{"description":"Success"}}}},"/v1/Contacts/CreateCautionaryAlerts":{"post":{"tags":["Contacts"],"operationId":"V1ContactsCreateCautionaryAlertsPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"cautionaryAlerts","in":"body","required":false,"schema":{"$ref":"#/definitions/CautionaryAlert"}}],"responses":{"200":{"description":"Success"}}}},"/v1/Contacts/GetContactDetails":{"get":{"tags":["Contacts"],"operationId":"V1ContactsGetContactDetailsGet","consumes":[],"produces":[],"parameters":[{"name":"contactId","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/v1/Contacts/GetContactsByUprn":{"get":{"tags":["Contacts"],"operationId":"V1ContactsGetContactsByUprnGet","consumes":[],"produces":[],"parameters":[{"name":"urpn","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/v1/Contacts/UpdateNextOfKin":{"patch":{"tags":["Contacts"],"summary":"Updates next of kin details saved against a contact","operationId":"V1ContactsUpdateNextOfKinPatch","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"nextOfKinDetails","in":"body","required":false,"schema":{"$ref":"#/definitions/NextOfKin"}}],"responses":{"200":{"description":"Success"}}}},"/v1/Login/AuthenticateNHOfficers":{"get":{"tags":["Login"],"operationId":"V1LoginAuthenticateNHOfficersGet","consumes":[],"produces":[],"parameters":[{"name":"username","in":"query","required":false,"type":"string"},{"name":"password","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/v1/OfficerAccounts/CreateOfficerAccount":{"post":{"tags":["OfficerAccounts"],"summary":"Creates a new Estate Officer Account","operationId":"V1OfficerAccountsCreateOfficerAccountPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"estateOfficerAccount","in":"body","required":false,"schema":{"$ref":"#/definitions/EstateOfficerAccount"}}],"responses":{"200":{"description":"Success"}}}},"/v1/OfficerAccounts/DisableOfficerAccount":{"patch":{"tags":["OfficerAccounts"],"summary":"Disable Estate Officer Account","operationId":"V1OfficerAccountsDisableOfficerAccountPatch","consumes":[],"produces":[],"parameters":[{"name":"officerId","in":"query","required":false,"type":"string"},{"name":"officerLoginId","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/v1/TenancyManagementInteractions/CreateTenancyManagementInteraction":{"post":{"tags":["TenancyManagementInteractions"],"summary":"Creates a TenancyManagement request","operationId":"V1TenancyManagementInteractionsCreateTenancyManagementInteractionPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"interaction","in":"body","required":false,"schema":{"$ref":"#/definitions/TenancyManagement"}}],"responses":{"200":{"description":"A successfully created repair request"}}}},"/v1/TenancyManagementInteractions/ServiceRequest":{"post":{"tags":["TenancyManagementInteractions"],"summary":"Creates a Service request","operationId":"V1TenancyManagementInteractionsServiceRequestPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"serviceRequest","in":"body","required":false,"schema":{"$ref":"#/definitions/CRMServiceRequest"}}],"responses":{"200":{"description":"A successfully created repair request"}}}},"/v1/TenancyManagementInteractions":{"get":{"tags":["TenancyManagementInteractions"],"operationId":"V1TenancyManagementInteractionsGet","consumes":[],"produces":[],"parameters":[{"name":"contactId","in":"query","required":false,"type":"string"},{"name":"personType","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}},"patch":{"tags":["TenancyManagementInteractions"],"operationId":"V1TenancyManagementInteractionsPatch","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"tenancyInteraction","in":"body","required":false,"schema":{"$ref":"#/definitions/TenancyManagement"}}],"responses":{"200":{"description":"Success"}}}},"/v1/TenancyManagementInteractions/GetAreaTrayIneractions":{"get":{"tags":["TenancyManagementInteractions"],"summary":"Get group Tray","operationId":"V1TenancyManagementInteractionsGetAreaTrayIneractionsGet","consumes":[],"produces":[],"parameters":[{"name":"OfficeId","in":"query","description":"OfficeId of the Group Tray","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/v1/TenancyManagementInteractions/TransferCall":{"put":{"tags":["TenancyManagementInteractions"],"summary":"TransferCallToAreaAndPatch","operationId":"V1TenancyManagementInteractionsTransferCallPut","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":[],"parameters":[{"name":"tenancyInteraction","in":"body","description":"List Of interaction or call to be updated/tranferred","required":false,"schema":{"$ref":"#/definitions/TenancyManagement"}}],"responses":{"200":{"description":"Success"}}}},"/v1/TRA/GetTRAForPatch":{"get":{"tags":["TRA"],"operationId":"V1TRAGetTRAForPatchGet","consumes":[],"produces":[],"parameters":[{"name":"patchId","in":"query","required":false,"type":"string","format":"uuid"}],"responses":{"200":{"description":"Success"}}}},"/v1/TRA/GetTRAInformation":{"get":{"tags":["TRA"],"operationId":"V1TRAGetTRAInformationGet","consumes":[],"produces":[],"parameters":[{"name":"TRAId","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"Success"}}}},"/v1/Transactions":{"get":{"tags":["Transactions"],"operationId":"V1TransactionsGet","consumes":[],"produces":[],"parameters":[{"name":"tagReference","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"Success"}}}},"/Values":{"get":{"tags":["Values"],"operationId":"ValuesGet","consumes":[],"produces":[],"parameters":[],"responses":{"200":{"description":"Success"}}}}},"definitions":{"OfficerAreaPatch":{"type":"object","properties":{"officerId":{"type":"string"},"patchId":{"type":"string"},"areamanagerId":{"type":"string"},"isUpdatingPatch":{"type":"boolean"},"updatedByOfficer":{"type":"string"},"deleteExistingRelationship":{"type":"boolean"}}},"Contact":{"type":"object","properties":{"crMcontactId":{"format":"uuid","type":"string"},"title":{"type":"string"},"dateOfBirth":{"format":"date-time","type":"string"},"lastName":{"type":"string"},"firstName":{"type":"string"},"email":{"type":"string"},"address1":{"type":"string"},"address2":{"type":"string"},"address3":{"type":"string"},"city":{"type":"string"},"postCode":{"type":"string"},"telephone1":{"type":"string"},"telephone2":{"type":"string"},"telephone3":{"type":"string"},"larn":{"type":"string"},"housingId":{"type":"string"},"usn":{"type":"string"},"createdByOfficer":{"type":"string"},"updatedByOfficer":{"type":"string"},"uprn":{"type":"string"},"fullAddressSearch":{"type":"string"},"fullAddressDisplay":{"type":"string"},"fullName":{"type":"string","readOnly":true}}},"CautionaryAlert":{"type":"object","properties":{"cautionaryAlertIds":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"cautionaryAlertType":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"contactId":{"type":"string"},"uprn":{"type":"string"},"cautionaryAlertIsToBeRemoved":{"type":"boolean"}}},"NextOfKin":{"type":"object","properties":{"nextOfKinName":{"type":"string"},"nextOfKinRelationship":{"type":"string"},"nextOfKinAddress":{"type":"string"},"nextOfKinMobile":{"type":"string"},"nextOfKinOtherTelehone":{"type":"string"},"nextOfKinEmail":{"type":"string"},"contactID":{"format":"uuid","type":"string"}}},"EstateOfficerAccount":{"type":"object","properties":{"officeraccount":{"$ref":"#/definitions/OfficerAccount"},"officerloginaccount":{"$ref":"#/definitions/OfficerLoginAccount"}}},"OfficerAccount":{"type":"object","properties":{"hackney_firstname":{"type":"string"},"hackney_lastname":{"type":"string"},"hackney_emailaddress":{"type":"string"},"hackney_name":{"type":"string","readOnly":true}}},"OfficerLoginAccount":{"type":"object","properties":{"hackney_username":{"type":"string"},"hackney_password":{"type":"string"}}},"TenancyManagement":{"type":"object","properties":{"interactionId":{"type":"string"},"contactId":{"type":"string"},"enquirySubject":{"type":"string"},"estateOfficerId":{"type":"string"},"subject":{"type":"string"},"adviceGiven":{"type":"string"},"estateOffice":{"type":"string"},"source":{"type":"string"},"natureofEnquiry":{"type":"string"},"estateOfficerName":{"type":"string"},"officerPatchId":{"type":"string"},"areaName":{"type":"string"},"managerId":{"type":"string"},"assignedToPatch":{"type":"boolean"},"assignedToManager":{"type":"boolean"},"transferred":{"type":"boolean"},"serviceRequest":{"$ref":"#/definitions/CRMServiceRequest"},"status":{"format":"int32","type":"integer"},"parentInteractionId":{"type":"string"},"processType":{"type":"string"},"householdId":{"type":"string"},"processStage":{"format":"int32","type":"integer"},"reasonForStartingProcess":{"format":"int32","type":"integer"}}},"CRMServiceRequest":{"type":"object","properties":{"id":{"type":"string"},"title":{"type":"string"},"description":{"type":"string"},"contactId":{"type":"string"},"parentCaseId":{"type":"string"},"subject":{"type":"string"},"createdDate":{"type":"string"},"enquiryType":{"type":"string"},"ticketNumber":{"type":"string"},"requestCallback":{"type":"boolean"},"transferred":{"type":"boolean"},"createdBy":{"type":"string"},"childRequests":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/CRMServiceRequest"}}}}}}    
];